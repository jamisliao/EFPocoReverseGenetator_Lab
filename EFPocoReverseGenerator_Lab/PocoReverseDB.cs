

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
// 
// Do not make changes directly to this file - edit the template instead.
// 
// The following connection settings were used to generate this file:
//     Configuration file:     "EFPocoReverseGenerator_Lab\App.config"
//     Connection String Name: "PocoReverseDBContext"
//     Connection String:      "Data Source=(localdb)\v11.0;initial catalog=PocoReverseDB;integrated security=True;App=EntityFramewor;"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace EFPocoReverseGenerator_Lab
{
    // ************************************************************************
    // Unit of work
    public interface IPocoReverseDBContext : IDisposable
    {
        DbSet<Product> Product { get; set; } // Product

        int SaveChanges();
    }

    // ************************************************************************
    // Database context
    public class PocoReverseDBContext : DbContext, IPocoReverseDBContext
    {
        public DbSet<Product> Product { get; set; } // Product
        
        static PocoReverseDBContext()
        {
            System.Data.Entity.Database.SetInitializer<PocoReverseDBContext>(null);
        }

        public PocoReverseDBContext()
            : base("Name=PocoReverseDBContext")
        {
        }

        public PocoReverseDBContext(string connectionString) : base(connectionString)
        {
        }

        public PocoReverseDBContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model) : base(connectionString, model)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == DBNull.Value);
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ProductConfiguration());
        }

        public static DbModelBuilder CreateModel(DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ProductConfiguration(schema));
            return modelBuilder;
        }
        
        // Stored Procedures
    }

    // ************************************************************************
    // POCO classes

    // Product
    public class Product
    {
        public Guid Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name
        public decimal? Price { get; set; } // Price
    }


    // ************************************************************************
    // POCO Configuration

    // Product
    public class ProductConfiguration : EntityTypeConfiguration<Product>
    {
        public ProductConfiguration()
            : this("dbo")
        {
        }
 
        public ProductConfiguration(string schema)
        {
            ToTable(schema + ".Product");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("Id").IsRequired().HasColumnType("uniqueidentifier").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName("Name").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Price).HasColumnName("Price").IsOptional().HasColumnType("decimal");
        }
    }


    // ************************************************************************
    // Stored procedure return models

}
// </auto-generated>

